{"version":3,"sources":["utils/maths.ts","utils/notes.ts","utils/state.ts","state/settings.ts","state/fretboard.ts","state/name-the-note.ts","state/statistics.ts","config/index.ts","state/find-the-note/notes.ts","state/find-the-note/statistics.ts","state/find-the-note/index.ts","pages/statistics.tsx","../node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js"],"names":["percent","value","total","round","getNoteNames","times","map","sharps","Note","simplify","repeat","midiToNoteName","midiNumber","Midi","pitchClass","toDisplayNoteName","note","halfNotes","noteName","isNumber","enharmonic","Math","random","localStorageEffect","defaultValue","node","setSelf","onSet","key","ls","newValue","DefaultValue","fretboardIdState","atom","default","effects_UNSTABLE","leftHandedState","fretMarkersState","halfNotesState","fretboardState","selector","get","config","fretboardNotesState","fretboard","leftHanded","flatMap","tuning","i","fretCount","steps","id","simple","name","string","ntnTotalAttemptsState","ntnTotalCorrectState","ntnGameAttemptsState","ntnGameCorrectState","ntnSeedState","ntnQueueState","seed","notes","shuffle","ntnPointerState","ntnPointerSelector","set","reset","queue","ntnNoteState","ntnGameSelector","isCorrect","gameStatsState","findTheNoteStats","fntGameStatsState","game","correct","attempts","fretboards","h","fretMarkers","guages","reverse","seedState","queueState","pointerState","activeNotesState","pointerProxySelector","targetNoteState","targetNoteCountState","filter","length","totalAttemptsState","totalCorrectState","gameAttemptsState","gameCorrectState","statProxySelector","Number","gameProxySelector","count","activeNotes","nextActiveNotes","without","StatisticsPage","useDisclosure","isOpen","onOpen","onClose","cancelRef","useRef","stats","useRecoilValue","resetStats","useResetRecoilState","as","Card","align","variant","isNumeric","leastDestructiveRef","fontSize","fontWeight","ref","onClick","colorScheme","ml","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded2","_excluded3","_excluded4","_excluded5","Table","forwardRef","props","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","tableProps","React","StylesProvider","chakra","table","role","__css","cx","__DEV__","displayName","TableCaption","_props$placement","placement","rest","useStyles","caption","captionSide","Thead","thead","Tbody","tbody","Th","_ref2","th","Tr","tr","Td","_ref3","td"],"mappings":"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","file":"static/js/statistics.79372162.chunk.js","sourcesContent":["import { round } from \"lodash\";\n\nexport const percent = (value: number, total: number): number =>\n  total > 0 ? round((value / total) * 100) : 0;\n","import { Midi, Note } from \"@tonaljs/tonal\";\nimport { isNumber, repeat, times } from \"lodash\";\nimport { IHalfNotes } from \"types\";\n\nexport const getNoteNames = (): string[] =>\n  times(12).map((sharps) => Note.simplify(\"C\" + repeat(\"#\", sharps)));\n\nexport const midiToNoteName = (midiNumber: number): string =>\n  Midi.midiToNoteName(midiNumber, { sharps: true, pitchClass: true });\n\nexport const isEnharmonicEquivalent = (a: string, b: string): boolean =>\n  a === b || Note.enharmonic(a) === b;\n\nexport const toDisplayNoteName = (\n  note: string | number,\n  halfNotes: IHalfNotes = \"sharps\"\n): string => {\n  const noteName = isNumber(note) ? midiToNoteName(note) : note;\n\n  if (Note.enharmonic(noteName) === noteName || halfNotes === \"sharps\") {\n    return noteName;\n  }\n\n  if (halfNotes === \"flats\") {\n    return Note.enharmonic(noteName);\n  }\n\n  return Math.random() > 0.5 ? Note.enharmonic(noteName) : noteName;\n};\n","import * as ls from \"local-storage\";\nimport { AtomEffect, DefaultValue } from \"recoil\";\n\nexport const localStorageEffect =\n  <T>(defaultValue?: T): AtomEffect<T> =>\n  ({ node, setSelf, onSet }) => {\n    const key = `noteTrainer.${node.key}`;\n    const value = ls.get<T>(key);\n\n    if (value !== null) {\n      setSelf(value);\n    } else if (defaultValue) {\n      ls.set<T>(key, defaultValue);\n      setSelf(defaultValue);\n    }\n\n    onSet((newValue) => {\n      if (newValue instanceof DefaultValue) {\n        ls.remove(key);\n      } else {\n        ls.set<T>(key, newValue);\n      }\n    });\n  };\n","import { atom } from \"recoil\";\nimport { IFretboardId, IHalfNotes } from \"types\";\nimport { localStorageEffect } from \"utils\";\n\nexport const fretboardIdState = atom<IFretboardId>({\n  key: \"fretboardIdState\",\n  default: \"standard-6\",\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const leftHandedState = atom<boolean>({\n  key: \"leftHandedState\",\n  default: false,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const fretMarkersState = atom<boolean>({\n  key: \"fretMarkersState\",\n  default: true,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const halfNotesState = atom<IHalfNotes>({\n  key: \"halfNotesState\",\n  default: \"random\",\n  effects_UNSTABLE: [localStorageEffect()],\n});\n","import { Note } from \"@tonaljs/tonal\";\nimport * as config from \"config\";\nimport { flatMap, repeat, times } from \"lodash\";\nimport { selector } from \"recoil\";\nimport { IFretboard, INote } from \"types\";\nimport { fretboardIdState, leftHandedState } from \"./settings\";\n\nexport const fretboardState = selector<IFretboard>({\n  key: \"fretboardState\",\n  get: ({ get }) => config.fretboards[get(fretboardIdState)],\n});\n\nexport const fretboardNotesState = selector<INote[]>({\n  key: \"fretboardNotesState\",\n  get: ({ get }) => {\n    const fretboard = get(fretboardState);\n    const leftHanded = get(leftHandedState);\n\n    return flatMap(fretboard.tuning, (note, i) =>\n      times(fretboard.fretCount + 1).map((steps) => {\n        const id = note + repeat(leftHanded ? \"b\" : \"#\", steps);\n        const simple = Note.simplify(id);\n        const name = leftHanded ? Note.enharmonic(simple) : simple;\n\n        return {\n          id,\n          name,\n          string: i + 1,\n        };\n      })\n    );\n  },\n});\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { shuffle } from \"shuffle-seed\";\nimport { INote } from \"types\";\nimport { localStorageEffect } from \"utils\";\nimport { fretboardNotesState } from \"./fretboard\";\n\nexport const ntnTotalAttemptsState = atom<number>({\n  key: \"ntnTotalAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const ntnTotalCorrectState = atom<number>({\n  key: \"ntnTotalCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const ntnGameAttemptsState = atom<number>({\n  key: \"ntnGameAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const ntnGameCorrectState = atom<number>({\n  key: \"ntnGameCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst ntnSeedState = atom<number>({\n  key: \"ntnSeedState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(Math.random())],\n});\n\nconst ntnQueueState = selector<INote[]>({\n  key: \"ntnQueueState\",\n  get: ({ get }) => {\n    const seed = get(ntnSeedState);\n    const notes = get(fretboardNotesState);\n    return shuffle(notes, seed);\n  },\n});\n\nconst ntnPointerState = atom<number>({\n  key: \"ntnPointerState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst ntnPointerSelector = selector<number>({\n  key: \"ntnPointerSelector\",\n  get: ({ get }) => get(ntnPointerState),\n  set: ({ get, set, reset }, newValue) => {\n    const queue = get(ntnQueueState);\n\n    if (newValue instanceof DefaultValue || !queue[newValue]) {\n      set(ntnSeedState, get(ntnSeedState) + Math.random());\n      reset(ntnPointerState);\n    } else {\n      set(ntnPointerState, newValue);\n    }\n  },\n});\n\nexport const ntnNoteState = selector<INote>({\n  key: \"ntnNoteState\",\n  get: ({ get }) => {\n    const queue = get(ntnQueueState);\n    const pointer = get(ntnPointerSelector);\n    return queue[pointer];\n  },\n});\n\nexport const ntnGameSelector = selector<INote>({\n  key: \"ntnGameSelector\",\n  get: ({ get }) => get(ntnNoteState),\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      // Reset game\n      reset(ntnPointerSelector);\n      reset(ntnGameCorrectState);\n      reset(ntnGameAttemptsState);\n      return;\n    }\n\n    const note = get(ntnNoteState);\n    const isCorrect = newValue.name === note.name;\n\n    // Update game stats\n    set(ntnGameAttemptsState, get(ntnGameAttemptsState) + 1);\n    set(ntnTotalAttemptsState, get(ntnTotalAttemptsState) + 1);\n\n    if (isCorrect) {\n      set(ntnGameCorrectState, get(ntnGameCorrectState) + 1);\n      set(ntnTotalCorrectState, get(ntnTotalCorrectState) + 1);\n      // Next note\n      set(ntnPointerSelector, get(ntnPointerSelector) + 1);\n    }\n  },\n});\n","import { DefaultValue, selector } from \"recoil\";\nimport { IStats } from \"types\";\nimport { percent } from \"utils\";\nimport { gameStatsState as fntGameStatsState } from \"./find-the-note\";\nimport {\n  ntnGameSelector,\n  ntnTotalAttemptsState,\n  ntnTotalCorrectState,\n} from \"./name-the-note\";\n\ninterface GameStats extends IStats {\n  game: string;\n}\n\nexport const gameStatsState = selector<GameStats[]>({\n  key: \"gameStatsState\",\n  get: ({ get }) => {\n    const { total: findTheNoteStats } = get(fntGameStatsState);\n\n    return [\n      // TODO: Refactor\n      {\n        game: \"Name the Note\",\n        correct: get(ntnTotalCorrectState),\n        attempts: get(ntnTotalAttemptsState),\n        percent: percent(get(ntnTotalCorrectState), get(ntnTotalAttemptsState)),\n      },\n      {\n        ...findTheNoteStats,\n        game: \"Find the Note\",\n      },\n    ];\n  },\n  set: ({ reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(fntGameStatsState);\n      // TODO: Refactor\n      reset(ntnGameSelector);\n      reset(ntnTotalCorrectState);\n      reset(ntnTotalAttemptsState);\n    }\n  },\n});\n","import { IFretboardId, IFretboard } from \"types\";\n\nexport const fretboards: Record<IFretboardId, IFretboard> = {\n  \"standard-6\": {\n    h: 220,\n    fretCount: 12,\n    id: \"standard-6\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Standard Tuning\",\n    tuning: [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"].reverse(),\n  },\n  \"e-flat\": {\n    h: 220,\n    fretCount: 12,\n    id: \"e-flat\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - E Flat\",\n    tuning: [\"D#\", \"G#\", \"C#\", \"F#\", \"A#\", \"D#\"].reverse(),\n  },\n  \"open-e\": {\n    h: 220,\n    fretCount: 12,\n    id: \"open-e\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Open E\",\n    tuning: [\"E\", \"B\", \"E\", \"G#\", \"B\", \"E\"].reverse(),\n  },\n  \"dad-gad\": {\n    h: 220,\n    fretCount: 12,\n    id: \"dad-gad\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Dad-Gad\",\n    tuning: [\"D\", \"A\", \"D\", \"G\", \"A\", \"D\"].reverse(),\n  },\n  \"standard-7\": {\n    h: 254,\n    fretCount: 12,\n    id: \"standard-7\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [7, 6, 5, 4, 3, 2, 1].reverse(),\n    tuning: [\"B\", \"E\", \"A\", \"D\", \"G\", \"B\", \"E\"].reverse(),\n    name: \"7 String Guitar - Standard Tuning\",\n  },\n  \"standard-4\": {\n    h: 200,\n    fretCount: 12,\n    id: \"standard-4\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [7, 6, 5, 4].reverse(),\n    tuning: [\"E\", \"A\", \"D\", \"G\"].reverse(),\n    name: \"4 String Bass - Standard Tuning\",\n  },\n  \"standard-5\": {\n    h: 220,\n    fretCount: 12,\n    id: \"standard-5\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [8, 7, 6, 5, 4].reverse(),\n    tuning: [\"B\", \"E\", \"A\", \"D\", \"G\"].reverse(),\n    name: \"5 String Bass - Standard Tuning\",\n  },\n};\n","import { filter } from \"lodash\";\nimport { atom, DefaultValue, selector } from \"recoil\";\nimport { shuffle } from \"shuffle-seed\";\nimport { fretboardNotesState } from \"state\";\nimport { INote } from \"types\";\nimport { getNoteNames, localStorageEffect } from \"utils\";\n\n/**\n * Seed for queue shuffling.\n */\nconst seedState = atom<number>({\n  key: \"find-the-note/seedState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(Math.random())],\n});\n\n/**\n * Maintain a queue for a consistent spread of notes.\n */\nconst queueState = selector<string[]>({\n  key: \"find-the-note/queueState\",\n  get: ({ get }) => shuffle(getNoteNames(), get(seedState)),\n});\n\n/**\n * Pointer to the current note in the queue.\n */\nconst pointerState = atom<number>({\n  key: \"find-the-note/pointerState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\n/**\n * Notes the user has selected to be rendered on the fretboard.\n */\nexport const activeNotesState = atom<INote[]>({\n  key: \"find-the-note/activeNotesState\",\n  default: [],\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\n/**\n * A wrapper around pointerState which handles reshuffling the\n * queue when we reach the end, moving the pointer and clearing the\n * fretboard.\n */\nexport const pointerProxySelector = selector<number>({\n  key: \"find-the-note/pointerProxySelector\",\n  get: ({ get }) => get(pointerState),\n  set: ({ get, set, reset }, newValue) => {\n    const queue = get(queueState);\n\n    if (newValue instanceof DefaultValue || !queue[newValue]) {\n      // Reshuffle queue and point to the start\n      reset(pointerState);\n      set(seedState, get(seedState) + Math.random());\n    } else {\n      // Move pointer to next note\n      set(pointerState, newValue);\n    }\n\n    // Clear fretboard\n    reset(activeNotesState);\n  },\n});\n\n/**\n * Current game note.\n */\nexport const targetNoteState = selector<string>({\n  key: \"find-the-note/targetNoteState\",\n  get: ({ get }) => get(queueState)[get(pointerState)],\n});\n\n/**\n * Number of times the target note appears on the fretboard.\n */\nexport const targetNoteCountState = selector<number>({\n  key: \"find-the-note/targetNoteCountState\",\n  get: ({ get }) =>\n    filter(get(fretboardNotesState), [\"name\", get(targetNoteState)]).length,\n});\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { IGameStats } from \"types\";\nimport { localStorageEffect, percent } from \"utils\";\n\nconst totalAttemptsState = atom<number>({\n  key: \"find-the-note/totalAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst totalCorrectState = atom<number>({\n  key: \"find-the-note/totalCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst gameAttemptsState = atom<number>({\n  key: \"find-the-note/gameAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst gameCorrectState = atom<number>({\n  key: \"find-the-note/gameCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const statProxySelector = selector<boolean>({\n  key: \"find-the-note/statProxySelector\",\n  get: () => true,\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(gameCorrectState);\n      reset(gameAttemptsState);\n    } else {\n      set(gameAttemptsState, get(gameAttemptsState) + 1);\n      set(totalAttemptsState, get(totalAttemptsState) + 1);\n      set(gameCorrectState, get(gameCorrectState) + Number(newValue));\n      set(totalCorrectState, get(totalCorrectState) + Number(newValue));\n    }\n  },\n});\n\nexport const gameStatsState = selector<IGameStats>({\n  key: \"find-the-note/gameStatsState\",\n  get: ({ get }) => ({\n    game: {\n      correct: get(gameCorrectState),\n      attempts: get(gameAttemptsState),\n      percent: percent(get(gameCorrectState), get(gameAttemptsState)),\n    },\n    total: {\n      correct: get(totalCorrectState),\n      attempts: get(totalAttemptsState),\n      percent: percent(get(totalCorrectState), get(totalAttemptsState)),\n    },\n  }),\n  set: ({ reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(gameCorrectState);\n      reset(gameAttemptsState);\n      reset(totalCorrectState);\n      reset(totalAttemptsState);\n    }\n  },\n});\n","import { without } from \"lodash\";\nimport { DefaultValue, selector } from \"recoil\";\nimport { INote } from \"types\";\nimport {\n  activeNotesState,\n  pointerProxySelector,\n  targetNoteCountState,\n  targetNoteState,\n} from \"./notes\";\nimport { statProxySelector } from \"./statistics\";\n\nexport const gameProxySelector = selector<INote | null>({\n  key: \"find-the-note/gameProxySelector\",\n  get: () => null,\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      // Reset stats\n      reset(statProxySelector);\n      // Reset game\n      reset(pointerProxySelector);\n      return;\n    }\n\n    // Incorrect\n    if (newValue === null || newValue.name !== get(targetNoteState)) {\n      // Update failed attempt stat\n      set(statProxySelector, false);\n      // Move on to the next note\n      set(pointerProxySelector, get(pointerProxySelector) + 1);\n      return;\n    }\n\n    // Correct\n    const count = get(targetNoteCountState);\n    const activeNotes = get(activeNotesState);\n    const nextActiveNotes = [...without(activeNotes, newValue), newValue];\n\n    // All notes found\n    if (nextActiveNotes.length === count) {\n      // Update successful attempt stat\n      set(statProxySelector, true);\n      // Move on to the next note\n      set(pointerProxySelector, get(pointerProxySelector) + 1);\n      return;\n    }\n\n    // Draw selected note on the fretboard\n    set(activeNotesState, nextActiveNotes);\n  },\n});\n\nexport * from \"./notes\";\nexport * from \"./statistics\";\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n  Container,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport Card from \"components/Card\";\nimport React, { FC, useRef } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport { gameStatsState } from \"state\";\n\nconst StatisticsPage: FC = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = useRef<HTMLButtonElement>(null);\n  const stats = useRecoilValue(gameStatsState);\n  const resetStats = useResetRecoilState(gameStatsState);\n\n  const handleResetClick = () => {\n    resetStats();\n    onClose();\n  };\n\n  return (\n    <Container>\n      <VStack as={Card} align=\"stretch\">\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Game</Th>\n              <Th isNumeric>✅</Th>\n              <Th isNumeric>Total</Th>\n              <Th isNumeric>%</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {stats.map(({ game, correct, attempts, percent }) => (\n              <Tr key={game}>\n                <Td>{game}</Td>\n                <Td isNumeric>{correct}</Td>\n                <Td isNumeric>{attempts}</Td>\n                <Td isNumeric>{percent}%</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n        <AlertDialog\n          isOpen={isOpen}\n          onClose={onClose}\n          leastDestructiveRef={cancelRef}\n        >\n          <AlertDialogOverlay>\n            <AlertDialogContent>\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                Reset Statistics\n              </AlertDialogHeader>\n              <AlertDialogBody>\n                Are you sure? This can't be undone.\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button\n                  ref={cancelRef}\n                  onClick={onClose}\n                  variant=\"outline\"\n                  colorScheme=\"blue\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  ml={2}\n                  colorScheme=\"red\"\n                  variant=\"outline\"\n                  onClick={handleResetClick}\n                >\n                  Reset\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialogOverlay>\n        </AlertDialog>\n        <Button onClick={onOpen} colorScheme=\"red\" variant=\"outline\">\n          Reset Statistics\n        </Button>\n      </VStack>\n    </Container>\n  );\n};\n\nexport default StatisticsPage;\n","import { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider, useStyles } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"overflow\", \"overflowX\", \"className\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"placement\"],\n    _excluded4 = [\"isNumeric\"],\n    _excluded5 = [\"isNumeric\"];\nvar TableContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _ref;\n\n  var overflow = props.overflow,\n      overflowX = props.overflowX,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-table__container\", className)\n  }, rest, {\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  }));\n});\nvar Table = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Table\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.table, _extends({\n    role: \"table\",\n    ref: ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className)\n  }, tableProps)));\n});\n\nif (__DEV__) {\n  Table.displayName = \"Table\";\n}\n\nvar TableCaption = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.caption, _extends({}, rest, {\n    ref: ref,\n    __css: _extends({}, styles.caption, {\n      captionSide: placement\n    })\n  }));\n});\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\";\n}\n\nvar Thead = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.thead, _extends({}, props, {\n    ref: ref,\n    __css: styles.thead\n  }));\n});\nvar Tbody = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tbody, _extends({}, props, {\n    ref: ref,\n    __css: styles.tbody\n  }));\n});\nvar Tfoot = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tfoot, _extends({}, props, {\n    ref: ref,\n    __css: styles.tfoot\n  }));\n});\nvar Th = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var isNumeric = _ref2.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded4);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.th, _extends({}, rest, {\n    ref: ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nvar Tr = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tr, _extends({\n    role: \"row\"\n  }, props, {\n    ref: ref,\n    __css: styles.tr\n  }));\n});\nvar Td = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var isNumeric = _ref3.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded5);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.td, _extends({\n    role: \"gridcell\"\n  }, rest, {\n    ref: ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  }));\n});\n\nexport { Table, TableCaption, TableContainer, Tbody, Td, Tfoot, Th, Thead, Tr };\n"],"sourceRoot":""}