{"version":3,"file":"static/js/fretboard-reference.32689ac3.chunk.js","mappings":"mMAMMA,EAAU,CACd,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,KACD,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,MAGGC,GAAoBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAW,CAC1CC,UAAW,CACTC,GAAI,EACJC,KAAM,QACNC,KAAM,WACNC,UAAW,SACXC,KAAM,kBAIJC,GAAMR,EAAAA,EAAAA,IAAOS,EAAAA,GAAQ,CACzBP,UAAW,CACTQ,EAAG,OACHC,SAAU,KACVC,YAAa,MACbC,YAAa,cAuCjB,IA/B4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvBC,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAEjC,OACE,SAAClB,EAAD,WACE,SAAC,KAAD,CAAMW,EAAE,OAAOQ,QAAS,EAAGC,gBAAgB,iBAA3C,SACGrB,EAAQsB,KAAI,SAACC,EAAOC,GAAR,OACX,SAAC,EAAAC,SAAD,UACGF,EAAMD,KAAI,SAACI,EAAMC,GAAP,OACT,SAAC,KAAD,CAEEC,WAAYJ,EAAM,EAClBK,QAA0B,IAAjBN,EAAMO,OAAe,QAAU,EAAIH,EAH9C,UAKE,SAACjB,EAAD,CACEqB,aAAW,EACXf,QAAS,kBAAMA,EAAQU,IACvBM,MAAON,EAAKO,SAAS,KAAO,QAAU,QACtCC,YAAaR,EAAKO,SAAS,KAAO,QAAU,QAJ9C,UAMGE,EAAAA,EAAAA,IAAkBT,EAAMT,MAVtBU,OAHIH,Y,iICPzB,UA/B+B,WAC7B,IAAMP,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAC3BI,GAAQL,EAAAA,EAAAA,IAAekB,EAAAA,IAC7B,GAAoCC,EAAAA,EAAAA,UAAiB,IAArD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAcC,EAAAA,EAAAA,UAClB,kBACElB,EAAMmB,QACJ,SAACC,EAAOjB,GAAR,OACGY,GAAcZ,EAAKkB,OAASN,EAQzBK,EARJ,kBAESA,GAFT,oBAIWjB,GAJX,IAKQmB,aAAaV,EAAAA,EAAAA,IAAkBT,EAAKkB,KAAM3B,SAIpD,MAEJ,CAACqB,EAAYrB,IAGf,OACE,iCACE,SAAC,IAAD,CAAWuB,YAAaA,KACxB,SAAC,IAAD,CAAUxB,QAASuB","sources":["components/Keyboard.tsx","pages/fretboard-reference.tsx"],"sourcesContent":["import { Button, chakra, Container, Grid, GridItem } from \"@chakra-ui/react\";\nimport React, { FC, Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { halfNotesState } from \"state\";\nimport { toDisplayNoteName } from \"utils\";\n\nconst columns = [\n  [\"C\", \"C#\"],\n  [\"D\", \"D#\"],\n  [\"E\"],\n  [\"F\", \"F#\"],\n  [\"G\", \"G#\"],\n  [\"A\", \"A#\"],\n  [\"B\"],\n];\n\nconst KeyboardContainer = chakra(Container, {\n  baseStyle: {\n    px: 2,\n    maxH: \"200px\",\n    flex: \"1 1 auto\",\n    alignSelf: \"center\",\n    maxW: \"container.md\",\n  },\n});\n\nconst Key = chakra(Button, {\n  baseStyle: {\n    h: \"100%\",\n    fontSize: \"lg\",\n    borderWidth: \"1px\",\n    borderColor: \"gray.300\",\n  },\n});\n\ninterface Props {\n  onClick: (noteName: string) => void;\n}\n\nconst Keyboard: FC<Props> = ({ onClick }) => {\n  const halfNotes = useRecoilValue(halfNotesState);\n\n  return (\n    <KeyboardContainer>\n      <Grid h=\"100%\" gridGap={1} templateColumns=\"repeat(7, 1fr)\">\n        {columns.map((notes, col) => (\n          <Fragment key={col}>\n            {notes.map((note, row) => (\n              <GridItem\n                key={row}\n                gridColumn={col + 1}\n                gridRow={notes.length === 1 ? \"1 / 3\" : 2 - row}\n              >\n                <Key\n                  isFullWidth\n                  onClick={() => onClick(note)}\n                  color={note.includes(\"#\") ? \"white\" : \"black\"}\n                  colorScheme={note.includes(\"#\") ? \"ebony\" : \"ivory\"}\n                >\n                  {toDisplayNoteName(note, halfNotes)}\n                </Key>\n              </GridItem>\n            ))}\n          </Fragment>\n        ))}\n      </Grid>\n    </KeyboardContainer>\n  );\n};\n\nexport default Keyboard;\n","import Fretboard from \"components/Fretboard\";\nimport Keyboard from \"components/Keyboard\";\nimport React, { FC, useMemo, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { fretboardNotesState, halfNotesState } from \"state\";\nimport { INote } from \"types\";\nimport { toDisplayNoteName } from \"utils\";\n\nconst FretboardReference: FC = () => {\n  const halfNotes = useRecoilValue(halfNotesState);\n  const notes = useRecoilValue(fretboardNotesState);\n  const [noteFilter, setNoteFilter] = useState<string>(\"\");\n\n  const activeNotes = useMemo<INote[]>(\n    () =>\n      notes.reduce<INote[]>(\n        (accum, note) =>\n          !noteFilter || note.name === noteFilter\n            ? [\n                ...accum,\n                {\n                  ...note,\n                  displayName: toDisplayNoteName(note.name, halfNotes),\n                },\n              ]\n            : accum,\n        []\n      ),\n    [noteFilter, halfNotes]\n  );\n\n  return (\n    <>\n      <Fretboard activeNotes={activeNotes} />\n      <Keyboard onClick={setNoteFilter} />\n    </>\n  );\n};\n\nexport default FretboardReference;\n"],"names":["columns","KeyboardContainer","chakra","Container","baseStyle","px","maxH","flex","alignSelf","maxW","Key","Button","h","fontSize","borderWidth","borderColor","onClick","halfNotes","useRecoilValue","halfNotesState","gridGap","templateColumns","map","notes","col","Fragment","note","row","gridColumn","gridRow","length","isFullWidth","color","includes","colorScheme","toDisplayNoteName","fretboardNotesState","useState","noteFilter","setNoteFilter","activeNotes","useMemo","reduce","accum","name","displayName"],"sourceRoot":""}