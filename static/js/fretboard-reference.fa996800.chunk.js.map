{"version":3,"file":"static/js/fretboard-reference.fa996800.chunk.js","mappings":"mMAMMA,EAAU,CACd,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,KACD,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,MAGGC,GAAoBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAW,CAC1CC,UAAW,CACTC,GAAI,EACJC,KAAM,QACNC,KAAM,WACNC,UAAW,SACXC,KAAM,kBAIJC,GAAMR,EAAAA,EAAAA,IAAOS,EAAAA,GAAQ,CACzBP,UAAW,CACTQ,SAAU,KACVC,YAAa,MACbC,YAAa,cA4CjB,IApC4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvBC,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAEjC,OACE,SAACjB,EAAD,WACE,SAAC,KAAD,CACEkB,EAAE,OACFC,QAAS,CAAEC,KAAM,EAAGC,GAAI,GACxBC,gBAAgB,iBAHlB,SAKGvB,EAAQwB,KAAI,SAACC,EAAOC,GAAR,OACX,SAAC,EAAAC,SAAD,UACGF,EAAMD,KAAI,SAACI,EAAMC,GAAP,OACT,SAAC,KAAD,CAEEC,WAAYJ,EAAM,EAClBK,QAASN,EAAMO,OAAS,EAAI,QAAU,EAAIH,EAH5C,UAKE,SAACnB,EAAD,CACEuB,aAAW,EACXlB,QAAS,kBAAMA,EAAQa,IACvBT,EAAGM,EAAMO,OAAS,EAAI,YAASE,EAC/BC,MAAOP,EAAKQ,SAAS,KAAO,QAAU,QACtCC,YAAaT,EAAKQ,SAAS,KAAO,QAAU,QAL9C,UAOGE,EAAAA,EAAAA,IAAkBV,EAAMZ,MAXtBa,OAHIH,Y,2ICJzB,UApC+B,WAC7B,IAAMV,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAC3BO,GAAQR,EAAAA,EAAAA,IAAesB,EAAAA,IAC7B,GAAoCC,EAAAA,EAAAA,UAAiB,IAArD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAcC,EAAAA,EAAAA,UAClB,kBACEnB,EAAMoB,QACJ,SAACC,EAAOlB,GAAR,OACGa,GAAcb,EAAKmB,OAASN,EAQzBK,EARJ,kBAESA,GAFT,oBAIWlB,GAJX,IAKQoB,aAAaV,EAAAA,EAAAA,IAAkBV,EAAKmB,KAAM/B,SAIpD,MAEJ,CAACyB,EAAYzB,IAGf,OACE,UAAC,KAAD,CACEiC,MAAM,UACN1C,KAAK,WACL2C,GAAI,CAAE7B,KAAM,EAAGC,GAAI,GACnB6B,QAAS,CAAE9B,KAAM,EAAGC,GAAI,GAJ1B,WAME,SAAC,IAAD,CAAWqB,YAAaA,KACxB,SAAC,IAAD,CAAU5B,QAAS2B","sources":["components/Keyboard.tsx","pages/fretboard-reference.tsx"],"sourcesContent":["import { Button, chakra, Container, Grid, GridItem } from \"@chakra-ui/react\";\nimport React, { FC, Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { halfNotesState } from \"state\";\nimport { toDisplayNoteName } from \"utils\";\n\nconst columns = [\n  [\"C\", \"C#\"],\n  [\"D\", \"D#\"],\n  [\"E\"],\n  [\"F\", \"F#\"],\n  [\"G\", \"G#\"],\n  [\"A\", \"A#\"],\n  [\"B\"],\n];\n\nconst KeyboardContainer = chakra(Container, {\n  baseStyle: {\n    px: 1,\n    maxH: \"200px\",\n    flex: \"1 1 auto\",\n    alignSelf: \"center\",\n    maxW: \"container.md\",\n  },\n});\n\nconst Key = chakra(Button, {\n  baseStyle: {\n    fontSize: \"lg\",\n    borderWidth: \"1px\",\n    borderColor: \"gray.300\",\n  },\n});\n\ninterface Props {\n  onClick: (noteName: string) => void;\n}\n\nconst Keyboard: FC<Props> = ({ onClick }) => {\n  const halfNotes = useRecoilValue(halfNotesState);\n\n  return (\n    <KeyboardContainer>\n      <Grid\n        h=\"100%\"\n        gridGap={{ base: 1, md: 2 }}\n        templateColumns=\"repeat(7, 1fr)\"\n      >\n        {columns.map((notes, col) => (\n          <Fragment key={col}>\n            {notes.map((note, row) => (\n              <GridItem\n                key={row}\n                gridColumn={col + 1}\n                gridRow={notes.length < 2 ? \"1 / 3\" : 2 - row}\n              >\n                <Key\n                  isFullWidth\n                  onClick={() => onClick(note)}\n                  h={notes.length < 2 ? \"100%\" : undefined}\n                  color={note.includes(\"#\") ? \"white\" : \"black\"}\n                  colorScheme={note.includes(\"#\") ? \"ebony\" : \"ivory\"}\n                >\n                  {toDisplayNoteName(note, halfNotes)}\n                </Key>\n              </GridItem>\n            ))}\n          </Fragment>\n        ))}\n      </Grid>\n    </KeyboardContainer>\n  );\n};\n\nexport default Keyboard;\n","import { VStack } from \"@chakra-ui/react\";\nimport Fretboard from \"components/Fretboard\";\nimport Keyboard from \"components/Keyboard\";\nimport React, { FC, useMemo, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { fretboardNotesState, halfNotesState } from \"state\";\nimport { INote } from \"types\";\nimport { toDisplayNoteName } from \"utils\";\n\nconst FretboardReference: FC = () => {\n  const halfNotes = useRecoilValue(halfNotesState);\n  const notes = useRecoilValue(fretboardNotesState);\n  const [noteFilter, setNoteFilter] = useState<string>(\"\");\n\n  const activeNotes = useMemo<INote[]>(\n    () =>\n      notes.reduce<INote[]>(\n        (accum, note) =>\n          !noteFilter || note.name === noteFilter\n            ? [\n                ...accum,\n                {\n                  ...note,\n                  displayName: toDisplayNoteName(note.name, halfNotes),\n                },\n              ]\n            : accum,\n        []\n      ),\n    [noteFilter, halfNotes]\n  );\n\n  return (\n    <VStack\n      align=\"stretch\"\n      flex=\"1 1 auto\"\n      mt={{ base: 1, md: 2 }}\n      spacing={{ base: 1, md: 2 }}\n    >\n      <Fretboard activeNotes={activeNotes} />\n      <Keyboard onClick={setNoteFilter} />\n    </VStack>\n  );\n};\n\nexport default FretboardReference;\n"],"names":["columns","KeyboardContainer","chakra","Container","baseStyle","px","maxH","flex","alignSelf","maxW","Key","Button","fontSize","borderWidth","borderColor","onClick","halfNotes","useRecoilValue","halfNotesState","h","gridGap","base","md","templateColumns","map","notes","col","Fragment","note","row","gridColumn","gridRow","length","isFullWidth","undefined","color","includes","colorScheme","toDisplayNoteName","fretboardNotesState","useState","noteFilter","setNoteFilter","activeNotes","useMemo","reduce","accum","name","displayName","align","mt","spacing"],"sourceRoot":""}