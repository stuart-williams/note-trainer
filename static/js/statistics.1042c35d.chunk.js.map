{"version":3,"file":"static/js/statistics.1042c35d.chunk.js","mappings":"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","sources":["config/index.ts","../node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js","pages/statistics.tsx","state/find-the-note/notes.ts","state/find-the-note/statistics.ts","state/find-the-note/index.ts","state/fretboard.ts","state/game.ts","state/statistics.ts","state/name-the-note/notes.ts","state/name-the-note/statistics.ts","state/name-the-note/index.ts","state/settings.ts","utils/countdown.ts","utils/maths.ts","utils/notes.ts","utils/state.ts"],"sourcesContent":["import { IFretboardConfig, IFretboardId, IGameDurationConfig } from \"types\";\n\nexport const fretboards: Record<IFretboardId, IFretboardConfig> = {\n  \"standard-6\": {\n    h: 220,\n    fretCount: 12,\n    id: \"standard-6\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Standard Tuning\",\n    tuning: [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"].reverse(),\n  },\n  \"e-flat\": {\n    h: 220,\n    fretCount: 12,\n    id: \"e-flat\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - E Flat\",\n    tuning: [\"D#\", \"G#\", \"C#\", \"F#\", \"A#\", \"D#\"].reverse(),\n  },\n  \"open-e\": {\n    h: 220,\n    fretCount: 12,\n    id: \"open-e\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Open E\",\n    tuning: [\"E\", \"B\", \"E\", \"G#\", \"B\", \"E\"].reverse(),\n  },\n  \"dad-gad\": {\n    h: 220,\n    fretCount: 12,\n    id: \"dad-gad\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Dad-Gad\",\n    tuning: [\"D\", \"A\", \"D\", \"G\", \"A\", \"D\"].reverse(),\n  },\n  \"standard-7\": {\n    h: 254,\n    fretCount: 12,\n    id: \"standard-7\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [7, 6, 5, 4, 3, 2, 1].reverse(),\n    tuning: [\"B\", \"E\", \"A\", \"D\", \"G\", \"B\", \"E\"].reverse(),\n    name: \"7 String Guitar - Standard Tuning\",\n  },\n  \"standard-4\": {\n    h: 200,\n    fretCount: 12,\n    id: \"standard-4\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [7, 6, 5, 4].reverse(),\n    tuning: [\"E\", \"A\", \"D\", \"G\"].reverse(),\n    name: \"4 String Bass - Standard Tuning\",\n  },\n  \"standard-5\": {\n    h: 220,\n    fretCount: 12,\n    id: \"standard-5\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [8, 7, 6, 5, 4].reverse(),\n    tuning: [\"B\", \"E\", \"A\", \"D\", \"G\"].reverse(),\n    name: \"5 String Bass - Standard Tuning\",\n  },\n};\n\nexport const gameDurations: IGameDurationConfig[] = [\n  {\n    label: \"30s\",\n    value: 30000,\n  },\n  {\n    label: \"1m\",\n    value: 60000,\n  },\n  {\n    label: \"3m\",\n    value: 180000,\n  },\n];\n","import { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider, useStyles } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"overflow\", \"overflowX\", \"className\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"placement\"],\n    _excluded4 = [\"isNumeric\"],\n    _excluded5 = [\"isNumeric\"];\nvar TableContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _ref;\n\n  var overflow = props.overflow,\n      overflowX = props.overflowX,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-table__container\", className)\n  }, rest, {\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  }));\n});\nvar Table = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Table\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.table, _extends({\n    role: \"table\",\n    ref: ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className)\n  }, tableProps)));\n});\n\nif (__DEV__) {\n  Table.displayName = \"Table\";\n}\n\nvar TableCaption = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.caption, _extends({}, rest, {\n    ref: ref,\n    __css: _extends({}, styles.caption, {\n      captionSide: placement\n    })\n  }));\n});\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\";\n}\n\nvar Thead = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.thead, _extends({}, props, {\n    ref: ref,\n    __css: styles.thead\n  }));\n});\nvar Tbody = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tbody, _extends({}, props, {\n    ref: ref,\n    __css: styles.tbody\n  }));\n});\nvar Tfoot = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tfoot, _extends({}, props, {\n    ref: ref,\n    __css: styles.tfoot\n  }));\n});\nvar Th = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var isNumeric = _ref2.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded4);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.th, _extends({}, rest, {\n    ref: ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nvar Tr = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tr, _extends({\n    role: \"row\"\n  }, props, {\n    ref: ref,\n    __css: styles.tr\n  }));\n});\nvar Td = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var isNumeric = _ref3.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded5);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.td, _extends({\n    role: \"gridcell\"\n  }, rest, {\n    ref: ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  }));\n});\n\nexport { Table, TableCaption, TableContainer, Tbody, Td, Tfoot, Th, Thead, Tr };\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n  Container,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport Card from \"components/Card\";\nimport React, { FC, useRef } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport { gameStatsState } from \"state\";\n\nconst StatisticsPage: FC = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = useRef<HTMLButtonElement>(null);\n  const stats = useRecoilValue(gameStatsState);\n  const resetStats = useResetRecoilState(gameStatsState);\n\n  const handleResetClick = () => {\n    resetStats();\n    onClose();\n  };\n\n  return (\n    <Container>\n      <VStack as={Card} align=\"stretch\">\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Game</Th>\n              <Th isNumeric>✅</Th>\n              <Th isNumeric>Total</Th>\n              <Th isNumeric>%</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {stats.map(({ game, correct, attempts, percent }) => (\n              <Tr key={game}>\n                <Td>{game}</Td>\n                <Td isNumeric>{correct}</Td>\n                <Td isNumeric>{attempts}</Td>\n                <Td isNumeric>{percent}%</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n        <AlertDialog\n          isCentered\n          isOpen={isOpen}\n          onClose={onClose}\n          leastDestructiveRef={cancelRef}\n        >\n          <AlertDialogOverlay>\n            <AlertDialogContent mx={4}>\n              <AlertDialogHeader>Reset Statistics</AlertDialogHeader>\n              <AlertDialogBody>\n                Are you sure? This can't be undone.\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button\n                  ref={cancelRef}\n                  onClick={onClose}\n                  variant=\"outline\"\n                  colorScheme=\"blue\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  ml={2}\n                  colorScheme=\"red\"\n                  variant=\"outline\"\n                  onClick={handleResetClick}\n                >\n                  Reset\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialogOverlay>\n        </AlertDialog>\n        <Button onClick={onOpen} colorScheme=\"red\" variant=\"outline\">\n          Reset Statistics\n        </Button>\n      </VStack>\n    </Container>\n  );\n};\n\nexport default StatisticsPage;\n","import { filter } from \"lodash\";\nimport { atom, DefaultValue, selector } from \"recoil\";\nimport { shuffle } from \"shuffle-seed\";\nimport { fretboardNotesState } from \"state\";\nimport { INote } from \"types\";\nimport { getNoteNames, localStorageEffect } from \"utils\";\n\n/**\n * Seed for queue shuffling.\n */\nconst seedState = atom<number>({\n  key: \"find-the-note/seedState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(Math.random())],\n});\n\n/**\n * Maintain a queue for a consistent spread of notes.\n */\nconst queueState = selector<string[]>({\n  key: \"find-the-note/queueState\",\n  get: ({ get }) => shuffle(getNoteNames(), get(seedState)),\n});\n\n/**\n * Pointer to the current note in the queue.\n */\nconst pointerState = atom<number>({\n  key: \"find-the-note/pointerState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\n/**\n * Notes the user has selected to be rendered on the fretboard.\n */\nexport const activeNotesState = atom<INote[]>({\n  key: \"find-the-note/activeNotesState\",\n  default: [],\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\n/**\n * A wrapper around pointerState which handles reshuffling the\n * queue when we reach the end, moving the pointer and clearing the\n * fretboard.\n */\nexport const pointerProxySelector = selector<number>({\n  key: \"find-the-note/pointerProxySelector\",\n  get: ({ get }) => get(pointerState),\n  set: ({ get, set, reset }, newValue) => {\n    const queue = get(queueState);\n\n    if (newValue instanceof DefaultValue || !queue[newValue]) {\n      // Reshuffle queue and point to the start\n      reset(pointerState);\n      set(seedState, get(seedState) + Math.random());\n    } else {\n      // Move pointer to next note\n      set(pointerState, newValue);\n    }\n\n    // Clear fretboard\n    reset(activeNotesState);\n  },\n});\n\n/**\n * Current game note.\n */\nexport const targetNoteState = selector<string>({\n  key: \"find-the-note/targetNoteState\",\n  get: ({ get }) => get(queueState)[get(pointerState)],\n});\n\n/**\n * Number of times the target note appears on the fretboard.\n */\nexport const targetNoteCountState = selector<number>({\n  key: \"find-the-note/targetNoteCountState\",\n  get: ({ get }) =>\n    filter(get(fretboardNotesState), [\"name\", get(targetNoteState)]).length,\n});\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { IGameStats } from \"types\";\nimport { localStorageEffect, percent } from \"utils\";\n\nconst totalAttemptsState = atom<number>({\n  key: \"find-the-note/totalAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst totalCorrectState = atom<number>({\n  key: \"find-the-note/totalCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst gameAttemptsState = atom<number>({\n  key: \"find-the-note/gameAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst gameCorrectState = atom<number>({\n  key: \"find-the-note/gameCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const statProxySelector = selector<boolean>({\n  key: \"find-the-note/statProxySelector\",\n  get: () => true,\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(gameCorrectState);\n      reset(gameAttemptsState);\n    } else {\n      set(gameAttemptsState, get(gameAttemptsState) + 1);\n      set(totalAttemptsState, get(totalAttemptsState) + 1);\n      set(gameCorrectState, get(gameCorrectState) + Number(newValue));\n      set(totalCorrectState, get(totalCorrectState) + Number(newValue));\n    }\n  },\n});\n\nexport const gameStatsState = selector<IGameStats>({\n  key: \"find-the-note/gameStatsState\",\n  get: ({ get }) => ({\n    game: {\n      correct: get(gameCorrectState),\n      attempts: get(gameAttemptsState),\n      percent: percent(get(gameCorrectState), get(gameAttemptsState)),\n    },\n    total: {\n      correct: get(totalCorrectState),\n      attempts: get(totalAttemptsState),\n      percent: percent(get(totalCorrectState), get(totalAttemptsState)),\n    },\n  }),\n  set: ({ reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(gameCorrectState);\n      reset(gameAttemptsState);\n      reset(totalCorrectState);\n      reset(totalAttemptsState);\n    }\n  },\n});\n","import { without } from \"lodash\";\nimport { DefaultValue, selector } from \"recoil\";\nimport { INote } from \"types\";\nimport { answerIndicatorState } from \"..\";\nimport {\n  activeNotesState,\n  pointerProxySelector,\n  targetNoteCountState,\n  targetNoteState,\n} from \"./notes\";\nimport { statProxySelector } from \"./statistics\";\n\nexport const gameProxySelector = selector<INote | null>({\n  key: \"find-the-note/gameProxySelector\",\n  get: () => null,\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      // Reset stats\n      reset(statProxySelector);\n      // Reset game\n      reset(pointerProxySelector);\n      return;\n    }\n\n    // Incorrect\n    if (newValue === null || newValue.name !== get(targetNoteState)) {\n      // Indicate incorrect answer\n      set(answerIndicatorState, 0);\n      // Update failed attempt stat\n      set(statProxySelector, false);\n      // Move on to the next note\n      set(pointerProxySelector, get(pointerProxySelector) + 1);\n      return;\n    }\n\n    // Correct\n    const count = get(targetNoteCountState);\n    const activeNotes = get(activeNotesState);\n    const nextActiveNotes = [...without(activeNotes, newValue), newValue];\n\n    // All notes found\n    if (nextActiveNotes.length === count) {\n      // Indicate correct answer\n      set(answerIndicatorState, 1);\n      // Update successful attempt stat\n      set(statProxySelector, true);\n      // Move on to the next note\n      set(pointerProxySelector, get(pointerProxySelector) + 1);\n      return;\n    }\n\n    // Draw selected note on the fretboard\n    set(activeNotesState, nextActiveNotes);\n  },\n});\n\nexport * from \"./notes\";\nexport * from \"./statistics\";\n","import { Note } from \"@tonaljs/tonal\";\nimport * as config from \"config\";\nimport { flatMap, repeat, times } from \"lodash\";\nimport { selector } from \"recoil\";\nimport { IFretboardConfig, INote } from \"types\";\nimport { fretboardIdState, leftHandedState } from \"./settings\";\n\nexport const fretboardState = selector<IFretboardConfig>({\n  key: \"fretboardState\",\n  get: ({ get }) => config.fretboards[get(fretboardIdState)],\n});\n\nexport const fretboardNotesState = selector<INote[]>({\n  key: \"fretboardNotesState\",\n  get: ({ get }) => {\n    const fretboard = get(fretboardState);\n    const leftHanded = get(leftHandedState);\n\n    return flatMap(fretboard.tuning, (note, i) =>\n      times(fretboard.fretCount + 1).map((steps) => {\n        const id = note + repeat(leftHanded ? \"b\" : \"#\", steps);\n        const simple = Note.simplify(id);\n        const name = leftHanded ? Note.enharmonic(simple) : simple;\n\n        return {\n          id,\n          name,\n          string: i + 1,\n        };\n      })\n    );\n  },\n});\n","import { atom } from \"recoil\";\nimport { IBinary, IGameDuration } from \"types\";\nimport { localStorageEffect } from \"utils\";\n\nexport const answerIndicatorState = atom<-1 | IBinary>({\n  key: \"answerIndicatorState\",\n  default: -1,\n});\n\nexport const gameDurationState = atom<IGameDuration>({\n  key: \"gameDurationState\",\n  default: 30000,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n","import { DefaultValue, selector } from \"recoil\";\nimport { IStats } from \"types\";\nimport { gameStatsState as fntGameStatsState } from \"./find-the-note\";\nimport { gameStatsState as ntnGameStatsState } from \"./name-the-note\";\n\ninterface GameStats extends IStats {\n  game: string;\n}\n\nexport const gameStatsState = selector<GameStats[]>({\n  key: \"gameStatsState\",\n  get: ({ get }) => {\n    const { total: ntnStats } = get(ntnGameStatsState);\n    const { total: ftnStats } = get(fntGameStatsState);\n\n    return [\n      {\n        game: \"Name the Note\",\n        ...ntnStats,\n      },\n      {\n        ...ftnStats,\n        game: \"Find the Note\",\n      },\n    ];\n  },\n  set: ({ reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(ntnGameStatsState);\n      reset(fntGameStatsState);\n    }\n  },\n});\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { shuffle } from \"shuffle-seed\";\nimport { INote } from \"types\";\nimport { localStorageEffect } from \"utils\";\nimport { fretboardNotesState } from \"../fretboard\";\n\nconst seedState = atom<number>({\n  key: \"name-the-note/seedState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(Math.random())],\n});\n\nconst queueState = selector<INote[]>({\n  key: \"name-the-note/queueState\",\n  get: ({ get }) => shuffle(get(fretboardNotesState), get(seedState)),\n});\n\nconst pointerState = atom<number>({\n  key: \"name-the-note/pointerState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const pointerProxySelector = selector<number>({\n  key: \"name-the-note/pointerProxySelector\",\n  get: ({ get }) => get(pointerState),\n  set: ({ get, set, reset }, newValue) => {\n    const queue = get(queueState);\n\n    if (newValue instanceof DefaultValue || !queue[newValue]) {\n      reset(pointerState);\n      set(seedState, get(seedState) + Math.random());\n    } else {\n      set(pointerState, newValue);\n    }\n  },\n});\n\nexport const targetNoteState = selector<INote>({\n  key: \"name-the-note/targetNoteState\",\n  get: ({ get }) => get(queueState)[get(pointerState)],\n});\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { IGameStats } from \"types\";\nimport { localStorageEffect, percent } from \"utils\";\n\nconst totalAttemptsState = atom<number>({\n  key: \"name-the-note/totalAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst totalCorrectState = atom<number>({\n  key: \"name-the-note/totalCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst gameAttemptsState = atom<number>({\n  key: \"name-the-note/gameAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst gameCorrectState = atom<number>({\n  key: \"name-the-note/gameCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const statProxySelector = selector<boolean>({\n  key: \"name-the-note/statProxySelector\",\n  get: () => true,\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(gameCorrectState);\n      reset(gameAttemptsState);\n    } else {\n      set(gameAttemptsState, get(gameAttemptsState) + 1);\n      set(totalAttemptsState, get(totalAttemptsState) + 1);\n      set(gameCorrectState, get(gameCorrectState) + Number(newValue));\n      set(totalCorrectState, get(totalCorrectState) + Number(newValue));\n    }\n  },\n});\n\nexport const gameStatsState = selector<IGameStats>({\n  key: \"name-the-note/gameStatsState\",\n  get: ({ get }) => ({\n    game: {\n      correct: get(gameCorrectState),\n      attempts: get(gameAttemptsState),\n      percent: percent(get(gameCorrectState), get(gameAttemptsState)),\n    },\n    total: {\n      correct: get(totalCorrectState),\n      attempts: get(totalAttemptsState),\n      percent: percent(get(totalCorrectState), get(totalAttemptsState)),\n    },\n  }),\n  set: ({ reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(gameCorrectState);\n      reset(gameAttemptsState);\n      reset(totalCorrectState);\n      reset(totalAttemptsState);\n    }\n  },\n});\n","import { DefaultValue, selector } from \"recoil\";\nimport { IBinary, INote } from \"types\";\nimport { answerIndicatorState } from \"..\";\nimport { pointerProxySelector, targetNoteState } from \"./notes\";\nimport { statProxySelector } from \"./statistics\";\n\nexport const gameProxySelector = selector<INote>({\n  key: \"name-the-note/gameProxySelector\",\n  get: ({ get }) => get(targetNoteState),\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      // Reset stats\n      reset(statProxySelector);\n      // Reset game\n      reset(pointerProxySelector);\n      return;\n    }\n\n    const isCorrect = newValue.name === get(targetNoteState).name;\n\n    // Indicate answer correctness\n    set(answerIndicatorState, Number(isCorrect) as IBinary);\n\n    // Update attempt stat\n    set(statProxySelector, isCorrect);\n\n    if (isCorrect) {\n      // Move on to the next note\n      set(pointerProxySelector, get(pointerProxySelector) + 1);\n    }\n  },\n});\n\nexport * from \"./notes\";\nexport * from \"./statistics\";\n","import { atom } from \"recoil\";\nimport { IFretboardId, IHalfNotes } from \"types\";\nimport { localStorageEffect } from \"utils\";\n\nexport const fretboardIdState = atom<IFretboardId>({\n  key: \"fretboardIdState\",\n  default: \"standard-6\",\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const leftHandedState = atom<boolean>({\n  key: \"leftHandedState\",\n  default: false,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const fretMarkersState = atom<boolean>({\n  key: \"fretMarkersState\",\n  default: true,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const halfNotesState = atom<IHalfNotes>({\n  key: \"halfNotesState\",\n  default: \"random\",\n  effects_UNSTABLE: [localStorageEffect()],\n});\n","import dayjs, { Dayjs } from \"dayjs\";\nimport { identity, padStart } from \"lodash\";\nimport { useRef, useState } from \"react\";\nimport { useInterval } from \"react-use\";\n\nconst pad = (n: number): string => padStart(String(n), 2, \"0\");\n\nconst calcRemaining = (expiration: Dayjs): number =>\n  Math.max(expiration.diff(dayjs()), 0);\n\ninterface Countdown {\n  remaining: {\n    minutes: number;\n    seconds: number;\n    formatted: string;\n  };\n  reset: () => void;\n  isRunning: boolean;\n  start: (duration: number) => void;\n}\n\ninterface CountdownOptions {\n  onExpire?: () => void;\n}\n\nexport const useCountdown = ({\n  onExpire = identity,\n}: CountdownOptions = {}): Countdown => {\n  const expiration = useRef<Dayjs>(dayjs());\n  const [remaining, setRemaining] = useState(0);\n  const seconds = Math.round(remaining / 1000);\n  const minutes = Math.floor(seconds / 60);\n\n  useInterval(\n    () => {\n      const newValue = calcRemaining(expiration.current);\n\n      if (!newValue) {\n        onExpire();\n      }\n\n      setRemaining(newValue);\n    },\n    remaining > 0 ? 1000 : null\n  );\n\n  return {\n    isRunning: remaining > 0,\n    remaining: {\n      minutes,\n      seconds,\n      formatted: `${pad(minutes)}:${pad(seconds % 60)}`,\n    },\n    start: (duration: number) => {\n      expiration.current = dayjs().add(duration, \"milliseconds\");\n      setRemaining(calcRemaining(expiration.current));\n    },\n    reset: () => setRemaining(0),\n  };\n};\n","import { round } from \"lodash\";\n\nexport const percent = (value: number, total: number): number =>\n  total > 0 ? round((value / total) * 100) : 0;\n","import { Midi, Note } from \"@tonaljs/tonal\";\nimport { isNumber, repeat, times } from \"lodash\";\nimport { IHalfNotes } from \"types\";\n\nexport const getNoteNames = (): string[] =>\n  times(12).map((sharps) => Note.simplify(\"C\" + repeat(\"#\", sharps)));\n\nexport const midiToNoteName = (midiNumber: number): string =>\n  Midi.midiToNoteName(midiNumber, { sharps: true, pitchClass: true });\n\nexport const isEnharmonicEquivalent = (a: string, b: string): boolean =>\n  a === b || Note.enharmonic(a) === b;\n\nexport const toDisplayNoteName = (\n  note: string | number,\n  halfNotes: IHalfNotes = \"sharps\"\n): string => {\n  const noteName = isNumber(note) ? midiToNoteName(note) : note;\n\n  if (Note.enharmonic(noteName) === noteName || halfNotes === \"sharps\") {\n    return noteName;\n  }\n\n  if (halfNotes === \"flats\") {\n    return Note.enharmonic(noteName);\n  }\n\n  return Math.random() > 0.5 ? Note.enharmonic(noteName) : noteName;\n};\n","import * as ls from \"local-storage\";\nimport { AtomEffect, DefaultValue } from \"recoil\";\n\nexport const localStorageEffect =\n  <T>(defaultValue?: T): AtomEffect<T> =>\n  ({ node, setSelf, onSet }) => {\n    const key = `noteTrainer.${node.key}`;\n    const value = ls.get<T>(key);\n\n    if (value !== null) {\n      setSelf(value);\n    } else if (defaultValue) {\n      ls.set<T>(key, defaultValue);\n      setSelf(defaultValue);\n    }\n\n    onSet((newValue) => {\n      if (newValue instanceof DefaultValue) {\n        ls.remove(key);\n      } else {\n        ls.set<T>(key, newValue);\n      }\n    });\n  };\n"],"names":["fretboards","h","fretCount","id","fretMarkers","guages","reverse","name","tuning","gameDurations","label","value","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded2","_excluded3","_excluded4","_excluded5","Table","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","tableProps","React","StylesProvider","chakra","role","__css","table","cx","__DEV__","displayName","TableCaption","_props$placement","placement","rest","useStyles","caption","captionSide","Thead","thead","Tbody","tbody","Th","_ref2","isNumeric","th","Tr","tr","Td","_ref3","td","useDisclosure","isOpen","onOpen","onClose","cancelRef","useRef","stats","useRecoilValue","gameStatsState","resetStats","useResetRecoilState","as","Card","align","variant","map","game","correct","attempts","percent","isCentered","leastDestructiveRef","mx","onClick","colorScheme","ml","seedState","atom","default","effects_UNSTABLE","localStorageEffect","Math","random","queueState","selector","get","shuffle","getNoteNames","pointerState","activeNotesState","pointerProxySelector","set","newValue","reset","queue","DefaultValue","targetNoteState","targetNoteCountState","filter","fretboardNotesState","totalAttemptsState","totalCorrectState","gameAttemptsState","gameCorrectState","statProxySelector","Number","total","gameProxySelector","answerIndicatorState","count","activeNotes","nextActiveNotes","without","fretboardState","config","fretboardIdState","fretboard","leftHanded","leftHandedState","flatMap","note","times","steps","repeat","simple","Note","string","gameDurationState","ntnStats","ntnGameStatsState","ftnStats","fntGameStatsState","isCorrect","fretMarkersState","halfNotesState","pad","n","padStart","String","calcRemaining","expiration","max","diff","dayjs","useCountdown","onExpire","identity","useState","remaining","setRemaining","seconds","round","minutes","floor","useInterval","current","isRunning","formatted","start","duration","add","sharps","midiToNoteName","midiNumber","Midi","pitchClass","toDisplayNoteName","halfNotes","noteName","isNumber","defaultValue","node","setSelf","onSet","ls"],"sourceRoot":""}