{"version":3,"file":"static/js/fretboard-reference.2d93d3c3.chunk.js","mappings":"kSAeMA,EAAY,CAChBC,MAAOC,EAAAA,GAAAA,OAAY,MACnBC,KAAMD,EAAAA,GAAAA,OAAY,OAGdE,EAAYC,EAAAA,GAAAA,OAAyB,CACzCC,UAAWN,EAAUC,MACrBM,SAAUP,EAAUG,KACpBK,eAAgBH,EAAAA,GAAAA,WAGZI,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAoB,CAC3CC,UAAW,CACTC,KAAM,QACNC,KAAM,QACNC,KAAM,WACNC,KAAM,kBA4CV,GAAeN,EAAAA,EAAAA,KApCa,SAAC,GAA2B,IAAzBO,EAAwB,EAAxBA,QAAYC,GAAY,YAC/CC,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAO3BC,GAAQC,EAAAA,EAAAA,QAAmC,IAejD,OACE,SAACd,GAAD,kBAAeS,GAAf,cACE,SAAC,KAAD,CACEM,SAAUC,EAAAA,SACVzB,UAAWA,EACX0B,SAPc,SAACC,GAAD,OAAkBV,GAAQW,EAAAA,EAAAA,IAAeD,KAQvDE,kBAAmBzB,EACnB0B,gBApBkB,SAAC,GAAkD,IAApCH,EAAmC,EAA/CI,WACnBC,EAAWV,EAAMW,QAAQN,KAASO,EAAAA,EAAAA,IAAkBP,EAAMR,GAGhE,OAFAG,EAAMW,QAAQN,GAAQK,GAGpB,SAAC,KAAD,CAAMG,UAAU,wBAAwBC,WAAW,OAAnD,SACGJ,c,iIChBT,UA/B+B,WAC7B,IAAMb,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAC3BgB,GAAQjB,EAAAA,EAAAA,IAAekB,EAAAA,IAC7B,GAAoCC,EAAAA,EAAAA,UAAiB,IAArD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAcC,EAAAA,EAAAA,UAClB,kBACEN,EAAMO,QACJ,SAACC,EAAOC,GAAR,OACGN,GAAcM,EAAKC,OAASP,EAQzBK,EARJ,kBAESA,GAFT,oBAIWC,GAJX,IAKQE,aAAad,EAAAA,EAAAA,IAAkBY,EAAKC,KAAM5B,SAIpD,MAEJ,CAACqB,EAAYrB,IAGf,OACE,iCACE,SAAC,IAAD,CAAWuB,YAAaA,KACxB,SAAC,IAAD,CAAUO,UAAU,SAAShC,QAASwB","sources":["components/Keyboard.tsx","pages/fretboard-reference.tsx"],"sourcesContent":["import {\n  chakra,\n  Container as ContainerComponent,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Midi } from \"@tonaljs/tonal\";\nimport { identity } from \"lodash\";\nimport React, { FC, useRef } from \"react\";\nimport { KeyboardShortcuts, Piano } from \"react-piano\";\nimport \"react-piano/dist/styles.css\";\nimport { useRecoilValue } from \"recoil\";\nimport { halfNotesState } from \"state\";\nimport \"theme/react-piano.css\";\nimport { midiToNoteName, toDisplayNoteName } from \"utils\";\n\nconst noteRange = {\n  first: Midi.toMidi(\"c4\"),\n  last: Midi.toMidi(\"b4\"),\n};\n\nconst shortcuts = KeyboardShortcuts.create({\n  firstNote: noteRange.first,\n  lastNote: noteRange.last,\n  keyboardConfig: KeyboardShortcuts.HOME_ROW,\n});\n\nconst Container = chakra(ContainerComponent, {\n  baseStyle: {\n    maxH: \"220px\",\n    minH: \"100px\",\n    flex: \"1 1 auto\",\n    maxW: \"container.sm\",\n  },\n});\n\ninterface Props {\n  onClick: (noteName: string) => void;\n}\n\nconst Keyboard: FC<Props> = ({ onClick, ...props }) => {\n  const halfNotes = useRecoilValue(halfNotesState);\n\n  /**\n   * renderNoteLabel is called on mouse over for some reason so\n   * cache `[midi]: noteName` so we don't randomly switch between\n   * sharps and flats when halfNotes = \"random\"\n   */\n  const cache = useRef<{ [midi: number]: string }>({});\n\n  const renderNoteLabel = ({ midiNumber: midi }: { midiNumber: number }) => {\n    const nameName = cache.current[midi] || toDisplayNoteName(midi, halfNotes);\n    cache.current[midi] = nameName;\n\n    return (\n      <Text className=\"ReactPiano__NoteLabel\" userSelect=\"none\">\n        {nameName}\n      </Text>\n    );\n  };\n\n  const handleClick = (midi: number) => onClick(midiToNoteName(midi));\n\n  return (\n    <Container {...props}>\n      <Piano\n        stopNote={identity}\n        noteRange={noteRange}\n        playNote={handleClick}\n        keyboardShortcuts={shortcuts}\n        renderNoteLabel={renderNoteLabel}\n      />\n    </Container>\n  );\n};\n\nexport default chakra(Keyboard);\n","import Fretboard from \"components/Fretboard\";\nimport Keyboard from \"components/Keyboard\";\nimport React, { FC, useMemo, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { fretboardNotesState, halfNotesState } from \"state\";\nimport { INote } from \"types\";\nimport { toDisplayNoteName } from \"utils\";\n\nconst FretboardReference: FC = () => {\n  const halfNotes = useRecoilValue(halfNotesState);\n  const notes = useRecoilValue(fretboardNotesState);\n  const [noteFilter, setNoteFilter] = useState<string>(\"\");\n\n  const activeNotes = useMemo<INote[]>(\n    () =>\n      notes.reduce<INote[]>(\n        (accum, note) =>\n          !noteFilter || note.name === noteFilter\n            ? [\n                ...accum,\n                {\n                  ...note,\n                  displayName: toDisplayNoteName(note.name, halfNotes),\n                },\n              ]\n            : accum,\n        []\n      ),\n    [noteFilter, halfNotes]\n  );\n\n  return (\n    <>\n      <Fretboard activeNotes={activeNotes} />\n      <Keyboard alignSelf=\"center\" onClick={setNoteFilter} />\n    </>\n  );\n};\n\nexport default FretboardReference;\n"],"names":["noteRange","first","Midi","last","shortcuts","KeyboardShortcuts","firstNote","lastNote","keyboardConfig","Container","chakra","ContainerComponent","baseStyle","maxH","minH","flex","maxW","onClick","props","halfNotes","useRecoilValue","halfNotesState","cache","useRef","stopNote","identity","playNote","midi","midiToNoteName","keyboardShortcuts","renderNoteLabel","midiNumber","nameName","current","toDisplayNoteName","className","userSelect","notes","fretboardNotesState","useState","noteFilter","setNoteFilter","activeNotes","useMemo","reduce","accum","note","name","displayName","alignSelf"],"sourceRoot":""}