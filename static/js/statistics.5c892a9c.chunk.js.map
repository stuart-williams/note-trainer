{"version":3,"sources":["utils/maths.ts","utils/notes.ts","utils/state.ts","state/settings.ts","state/fretboard.ts","state/find-the-note.ts","state/name-the-note.ts","state/statistics.ts","config/index.ts","pages/statistics.tsx","../node_modules/@chakra-ui/table/dist/chakra-ui-table.esm.js"],"names":["percent","value","total","round","getNoteNames","times","map","sharps","Note","simplify","repeat","midiToNoteName","midiNumber","Midi","pitchClass","toDisplayNoteName","note","halfNotes","noteName","isNumber","enharmonic","Math","random","localStorageEffect","defaultValue","node","setSelf","onSet","key","ls","newValue","DefaultValue","fretboardIdState","atom","default","effects_UNSTABLE","leftHandedState","fretMarkersState","halfNotesState","fretboardState","selector","get","config","fretboardNotesState","fretboard","leftHanded","flatMap","tuning","i","fretCount","steps","id","simple","name","string","ftnFrettedNotesState","ftnSeedState","ftnQueueState","seed","notes","shuffle","ftnPointerState","ftnPointerSelector","set","reset","queue","ftnNoteState","ftnCountState","targetNote","filter","length","ftnGameSelector","ntnTotalAttemptsState","ntnTotalCorrectState","ntnGameAttemptsState","ntnGameCorrectState","ntnSeedState","ntnQueueState","ntnPointerState","ntnPointerSelector","ntnNoteState","ntnGameSelector","isCorrect","Number","gameStatsState","game","correct","attempts","fretboards","h","fretMarkers","guages","reverse","StatisticsPage","useDisclosure","isOpen","onOpen","onClose","cancelRef","useRef","stats","useRecoilValue","resetStats","useResetRecoilState","as","Card","align","variant","isNumeric","leastDestructiveRef","fontSize","fontWeight","ref","onClick","colorScheme","ml","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded2","_excluded3","_excluded4","_excluded5","Table","forwardRef","props","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","tableProps","React","StylesProvider","chakra","table","role","__css","cx","__DEV__","displayName","TableCaption","_props$placement","placement","rest","useStyles","caption","captionSide","Thead","thead","Tbody","tbody","Th","_ref2","th","Tr","tr","Td","_ref3","td"],"mappings":"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","file":"static/js/statistics.5c892a9c.chunk.js","sourcesContent":["import { round } from \"lodash\";\n\nexport const percent = (value: number, total: number): number =>\n  total > 0 ? round((value / total) * 100) : 0;\n","import { Midi, Note } from \"@tonaljs/tonal\";\nimport { isNumber, repeat, times } from \"lodash\";\nimport { IHalfNotes } from \"types\";\n\nexport const getNoteNames = (): string[] =>\n  times(12).map((sharps) => Note.simplify(\"C\" + repeat(\"#\", sharps)));\n\nexport const midiToNoteName = (midiNumber: number): string =>\n  Midi.midiToNoteName(midiNumber, { sharps: true, pitchClass: true });\n\nexport const isEnharmonicEquivalent = (a: string, b: string): boolean =>\n  a === b || Note.enharmonic(a) === b;\n\nexport const toDisplayNoteName = (\n  note: string | number,\n  halfNotes: IHalfNotes = \"sharps\"\n): string => {\n  const noteName = isNumber(note) ? midiToNoteName(note) : note;\n\n  if (Note.enharmonic(noteName) === noteName || halfNotes === \"sharps\") {\n    return noteName;\n  }\n\n  if (halfNotes === \"flats\") {\n    return Note.enharmonic(noteName);\n  }\n\n  return Math.random() > 0.5 ? Note.enharmonic(noteName) : noteName;\n};\n","import * as ls from \"local-storage\";\nimport { AtomEffect, DefaultValue } from \"recoil\";\n\nexport const localStorageEffect =\n  <T>(defaultValue?: T): AtomEffect<T> =>\n  ({ node, setSelf, onSet }) => {\n    const key = `noteTrainer.${node.key}`;\n    const value = ls.get<T>(key);\n\n    if (value !== null) {\n      setSelf(value);\n    } else if (defaultValue) {\n      ls.set<T>(key, defaultValue);\n      setSelf(defaultValue);\n    }\n\n    onSet((newValue) => {\n      if (newValue instanceof DefaultValue) {\n        ls.remove(key);\n      } else {\n        ls.set<T>(key, newValue);\n      }\n    });\n  };\n","import { atom } from \"recoil\";\nimport { IFretboardId, IHalfNotes } from \"types\";\nimport { localStorageEffect } from \"utils\";\n\nexport const fretboardIdState = atom<IFretboardId>({\n  key: \"fretboardIdState\",\n  default: \"standard-6\",\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const leftHandedState = atom<boolean>({\n  key: \"leftHandedState\",\n  default: false,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const fretMarkersState = atom<boolean>({\n  key: \"fretMarkersState\",\n  default: true,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const halfNotesState = atom<IHalfNotes>({\n  key: \"halfNotesState\",\n  default: \"random\",\n  effects_UNSTABLE: [localStorageEffect()],\n});\n","import { Note } from \"@tonaljs/tonal\";\nimport * as config from \"config\";\nimport { flatMap, repeat, times } from \"lodash\";\nimport { selector } from \"recoil\";\nimport { IFretboard, INote } from \"types\";\nimport { fretboardIdState, leftHandedState } from \"./settings\";\n\nexport const fretboardState = selector<IFretboard>({\n  key: \"fretboardState\",\n  get: ({ get }) => config.fretboards[get(fretboardIdState)],\n});\n\nexport const fretboardNotesState = selector<INote[]>({\n  key: \"fretboardNotesState\",\n  get: ({ get }) => {\n    const fretboard = get(fretboardState);\n    const leftHanded = get(leftHandedState);\n\n    return flatMap(fretboard.tuning, (note, i) =>\n      times(fretboard.fretCount + 1).map((steps) => {\n        const id = note + repeat(leftHanded ? \"b\" : \"#\", steps);\n        const simple = Note.simplify(id);\n        const name = leftHanded ? Note.enharmonic(simple) : simple;\n\n        return {\n          id,\n          name,\n          string: i + 1,\n        };\n      })\n    );\n  },\n});\n","import { filter } from \"lodash\";\nimport { atom, DefaultValue, selector } from \"recoil\";\nimport { shuffle } from \"shuffle-seed\";\nimport { INote } from \"types\";\nimport { getNoteNames, localStorageEffect } from \"utils\";\nimport { fretboardNotesState } from \"./fretboard\";\n\nexport const ftnFrettedNotesState = atom<INote[]>({\n  key: \"ftnFrettedNotesState\",\n  default: [],\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst ftnSeedState = atom<number>({\n  key: \"ftnSeedState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(Math.random())],\n});\n\nconst ftnQueueState = selector<string[]>({\n  key: \"ftnQueueState\",\n  get: ({ get }) => {\n    const seed = get(ftnSeedState);\n    const notes = getNoteNames();\n    return shuffle(notes, seed);\n  },\n});\n\nconst ftnPointerState = atom<number>({\n  key: \"ftnPointerState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst ftnPointerSelector = selector<number>({\n  key: \"ftnPointerSelector\",\n  get: ({ get }) => get(ftnPointerState),\n  set: ({ get, set, reset }, newValue) => {\n    const queue = get(ftnQueueState);\n\n    if (newValue instanceof DefaultValue || !queue[newValue]) {\n      set(ftnSeedState, get(ftnSeedState) + Math.random());\n      reset(ftnPointerState);\n    } else {\n      set(ftnPointerState, newValue);\n    }\n\n    reset(ftnFrettedNotesState);\n  },\n});\n\nexport const ftnNoteState = selector<string>({\n  key: \"ftnNoteState\",\n  get: ({ get }) => {\n    const queue = get(ftnQueueState);\n    const pointer = get(ftnPointerSelector);\n    return queue[pointer];\n  },\n});\n\nexport const ftnCountState = selector<number>({\n  key: \"ftnCountState\",\n  get: ({ get }) => {\n    const notes = get(fretboardNotesState);\n    const targetNote = get(ftnNoteState);\n\n    return filter(notes, [\"name\", targetNote]).length;\n  },\n});\n\nexport const ftnGameSelector = selector<INote[]>({\n  key: \"ftnGameSelector\",\n  get: ({ get }) => get(ftnFrettedNotesState),\n  set: ({ get, set }, newValue) => {\n    if (\n      newValue instanceof DefaultValue ||\n      newValue.length === get(ftnCountState)\n    ) {\n      // All notes found so move onto the next\n      set(ftnPointerSelector, get(ftnPointerSelector) + 1);\n    } else {\n      set(ftnFrettedNotesState, newValue);\n    }\n  },\n});\n","import { atom, DefaultValue, selector } from \"recoil\";\nimport { shuffle } from \"shuffle-seed\";\nimport { INote } from \"types\";\nimport { localStorageEffect } from \"utils\";\nimport { fretboardNotesState } from \"./fretboard\";\n\nexport const ntnTotalAttemptsState = atom<number>({\n  key: \"ntnTotalAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const ntnTotalCorrectState = atom<number>({\n  key: \"ntnTotalCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const ntnGameAttemptsState = atom<number>({\n  key: \"ntnGameAttemptsState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nexport const ntnGameCorrectState = atom<number>({\n  key: \"ntnGameCorrectState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst ntnSeedState = atom<number>({\n  key: \"ntnSeedState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(Math.random())],\n});\n\nconst ntnQueueState = selector<INote[]>({\n  key: \"ntnQueueState\",\n  get: ({ get }) => {\n    const seed = get(ntnSeedState);\n    const notes = get(fretboardNotesState);\n    return shuffle(notes, seed);\n  },\n});\n\nconst ntnPointerState = atom<number>({\n  key: \"ntnPointerState\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect()],\n});\n\nconst ntnPointerSelector = selector<number>({\n  key: \"ntnPointerSelector\",\n  get: ({ get }) => get(ntnPointerState),\n  set: ({ get, set, reset }, newValue) => {\n    const queue = get(ntnQueueState);\n\n    if (newValue instanceof DefaultValue || !queue[newValue]) {\n      set(ntnSeedState, get(ntnSeedState) + Math.random());\n      reset(ntnPointerState);\n    } else {\n      set(ntnPointerState, newValue);\n    }\n  },\n});\n\nexport const ntnNoteState = selector<INote>({\n  key: \"ntnNoteState\",\n  get: ({ get }) => {\n    const queue = get(ntnQueueState);\n    const pointer = get(ntnPointerSelector);\n    return queue[pointer];\n  },\n});\n\nexport const ntnGameSelector = selector<INote>({\n  key: \"ntnGameSelector\",\n  get: ({ get }) => get(ntnNoteState),\n  set: ({ get, set, reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      // Reset game\n      reset(ntnPointerSelector);\n      reset(ntnGameCorrectState);\n      reset(ntnGameAttemptsState);\n      return;\n    }\n\n    const note = get(ntnNoteState);\n    const isCorrect = newValue.name === note.name;\n\n    // Update game stats\n    set(ntnGameAttemptsState, get(ntnGameAttemptsState) + 1);\n    set(ntnGameCorrectState, get(ntnGameCorrectState) + Number(isCorrect));\n    set(ntnTotalAttemptsState, get(ntnTotalAttemptsState) + 1);\n    set(ntnTotalCorrectState, get(ntnTotalCorrectState) + Number(isCorrect));\n\n    if (isCorrect) {\n      // Next note\n      set(ntnPointerSelector, get(ntnPointerSelector) + 1);\n    }\n  },\n});\n","import { DefaultValue, selector } from \"recoil\";\nimport { percent } from \"utils\";\nimport {\n  ntnGameSelector,\n  ntnTotalAttemptsState,\n  ntnTotalCorrectState,\n} from \"./name-the-note\";\n\ninterface GameStats {\n  game: string;\n  percent: number;\n  correct: number;\n  attempts: number;\n}\n\nexport const gameStatsState = selector<GameStats[]>({\n  key: \"gameStatsState\",\n  get: ({ get }) => [\n    {\n      game: \"Name the Note\",\n      correct: get(ntnTotalCorrectState),\n      attempts: get(ntnTotalAttemptsState),\n      percent: percent(get(ntnTotalCorrectState), get(ntnTotalAttemptsState)),\n    },\n  ],\n  set: ({ reset }, newValue) => {\n    if (newValue instanceof DefaultValue) {\n      reset(ntnGameSelector);\n      reset(ntnTotalCorrectState);\n      reset(ntnTotalAttemptsState);\n    }\n  },\n});\n","import { IFretboardId, IFretboard } from \"types\";\n\nexport const fretboards: Record<IFretboardId, IFretboard> = {\n  \"standard-6\": {\n    h: 220,\n    fretCount: 12,\n    id: \"standard-6\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Standard Tuning\",\n    tuning: [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"].reverse(),\n  },\n  \"e-flat\": {\n    h: 220,\n    fretCount: 12,\n    id: \"e-flat\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - E Flat\",\n    tuning: [\"D#\", \"G#\", \"C#\", \"F#\", \"A#\", \"D#\"].reverse(),\n  },\n  \"open-e\": {\n    h: 220,\n    fretCount: 12,\n    id: \"open-e\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Open E\",\n    tuning: [\"E\", \"B\", \"E\", \"G#\", \"B\", \"E\"].reverse(),\n  },\n  \"dad-gad\": {\n    h: 220,\n    fretCount: 12,\n    id: \"dad-gad\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [6, 5, 4, 3, 2, 1].reverse(),\n    name: \"6 String Guitar - Dad-Gad\",\n    tuning: [\"D\", \"A\", \"D\", \"G\", \"A\", \"D\"].reverse(),\n  },\n  \"standard-7\": {\n    h: 254,\n    fretCount: 12,\n    id: \"standard-7\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [7, 6, 5, 4, 3, 2, 1].reverse(),\n    tuning: [\"B\", \"E\", \"A\", \"D\", \"G\", \"B\", \"E\"].reverse(),\n    name: \"7 String Guitar - Standard Tuning\",\n  },\n  \"standard-4\": {\n    h: 200,\n    fretCount: 12,\n    id: \"standard-4\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [7, 6, 5, 4].reverse(),\n    tuning: [\"E\", \"A\", \"D\", \"G\"].reverse(),\n    name: \"4 String Bass - Standard Tuning\",\n  },\n  \"standard-5\": {\n    h: 220,\n    fretCount: 12,\n    id: \"standard-5\",\n    fretMarkers: [3, 5, 7, 9, 12],\n    guages: [8, 7, 6, 5, 4].reverse(),\n    tuning: [\"B\", \"E\", \"A\", \"D\", \"G\"].reverse(),\n    name: \"5 String Bass - Standard Tuning\",\n  },\n};\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n  Container,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport Card from \"components/Card\";\nimport React, { FC, useRef } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport { gameStatsState } from \"state\";\n\nconst StatisticsPage: FC = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = useRef<HTMLButtonElement>(null);\n  const stats = useRecoilValue(gameStatsState);\n  const resetStats = useResetRecoilState(gameStatsState);\n\n  const handleResetClick = () => {\n    resetStats();\n    onClose();\n  };\n\n  return (\n    <Container>\n      <VStack as={Card} align=\"stretch\">\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Game</Th>\n              <Th isNumeric>✅</Th>\n              <Th isNumeric>Total</Th>\n              <Th isNumeric>%</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {stats.map(({ game, correct, attempts, percent }) => (\n              <Tr key={game}>\n                <Td>{game}</Td>\n                <Td isNumeric>{correct}</Td>\n                <Td isNumeric>{attempts}</Td>\n                <Td isNumeric>{percent}%</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n        <AlertDialog\n          isOpen={isOpen}\n          onClose={onClose}\n          leastDestructiveRef={cancelRef}\n        >\n          <AlertDialogOverlay>\n            <AlertDialogContent>\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                Reset Statistics\n              </AlertDialogHeader>\n              <AlertDialogBody>\n                Are you sure? This can't be undone.\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button\n                  ref={cancelRef}\n                  onClick={onClose}\n                  variant=\"outline\"\n                  colorScheme=\"blue\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  ml={2}\n                  colorScheme=\"red\"\n                  variant=\"outline\"\n                  onClick={handleResetClick}\n                >\n                  Reset\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialogOverlay>\n        </AlertDialog>\n        <Button onClick={onOpen} colorScheme=\"red\" variant=\"outline\">\n          Reset Statistics\n        </Button>\n      </VStack>\n    </Container>\n  );\n};\n\nexport default StatisticsPage;\n","import { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider, useStyles } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"overflow\", \"overflowX\", \"className\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"placement\"],\n    _excluded4 = [\"isNumeric\"],\n    _excluded5 = [\"isNumeric\"];\nvar TableContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _ref;\n\n  var overflow = props.overflow,\n      overflowX = props.overflowX,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-table__container\", className)\n  }, rest, {\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  }));\n});\nvar Table = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Table\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.table, _extends({\n    role: \"table\",\n    ref: ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className)\n  }, tableProps)));\n});\n\nif (__DEV__) {\n  Table.displayName = \"Table\";\n}\n\nvar TableCaption = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.caption, _extends({}, rest, {\n    ref: ref,\n    __css: _extends({}, styles.caption, {\n      captionSide: placement\n    })\n  }));\n});\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\";\n}\n\nvar Thead = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.thead, _extends({}, props, {\n    ref: ref,\n    __css: styles.thead\n  }));\n});\nvar Tbody = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tbody, _extends({}, props, {\n    ref: ref,\n    __css: styles.tbody\n  }));\n});\nvar Tfoot = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tfoot, _extends({}, props, {\n    ref: ref,\n    __css: styles.tfoot\n  }));\n});\nvar Th = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var isNumeric = _ref2.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded4);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.th, _extends({}, rest, {\n    ref: ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nvar Tr = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tr, _extends({\n    role: \"row\"\n  }, props, {\n    ref: ref,\n    __css: styles.tr\n  }));\n});\nvar Td = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var isNumeric = _ref3.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded5);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.td, _extends({\n    role: \"gridcell\"\n  }, rest, {\n    ref: ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  }));\n});\n\nexport { Table, TableCaption, TableContainer, Tbody, Td, Tfoot, Th, Thead, Tr };\n"],"sourceRoot":""}